name: 🚀 Deploy

on:
  pull_request:
    types: [ closed ]
    branches: [ "main" ]

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: 🍀 서브모듈 추가
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GIT_TOKEN }}

      - name: 🍀 JDK 17 세팅
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: 🍀 gradlew 실행 권한 설정
        run: chmod +x gradlew

      - name: 🍀 Gradle 캐시 설정
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: 🍀 비밀 설정 파일 복사
        run: ./gradlew copySecret

      - name: 🍀 Gradle 빌드
        env:
          DEPLOY_CHECK: ok
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DEV_DB_PASSWORD: ${{ secrets.DEV_DB_PASSWORD }}
          PROD_DB_PASSWORD: ${{ secrets.PROD_DB_PASSWORD }}
          AES_KEY: ${{ secrets.AES_KEY }}
        run: ./gradlew build --parallel

      - name: 🌐 AWS 자격 증명 구성
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_PRIVATE_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: 📦 jar, appspec, 배포 스크립트 복사
        run: |
          mkdir -p before-deploy
          cp ./build/libs/*.jar ./before-deploy/
          cp ./appspec.yml ./before-deploy/
          cp -r ./scripts/ ./before-deploy/scripts/

      - name: 🗜️ 배포 패키지 생성
        run: zip -r -qq ./deploy.zip ./before-deploy/

      - name: 🔑 Setup SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

      - name: 🚀 LightSail 서버에 업로드
        run: |
          scp ./deploy.zip ec2-user@${{ secrets.LIGHTSAIL_HOST }}:/home/ec2-user/deploy.zip
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "unzip -o /home/ec2-user/deploy.zip -d /home/ec2-user && chmod +x /home/ec2-user/scripts/*.sh"

      - name: 🎯 LightSail 서버에서 배포 실행
        run: |
          ssh ec2-user@${{ secrets.LIGHTSAIL_HOST }} "/home/ec2-user/scripts/run_new_was.sh"